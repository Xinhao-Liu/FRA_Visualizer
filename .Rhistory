library(shiny); runApp('stat440-final-project-xinhaol2.R')
install.packages('googledrive')
install.packages("googledrive")
install.packages("googledrive")
install.packages("googledrive")
install.packages("googledrive")
library(googledrive)
library(shiny); runApp('stat440-final-project-xinhaol2.R')
library(shiny)
library(shinythemes)
library(plotly)
install.packages("vctrs")
install.packages("vctrs")
install.packages("vctrs")
install.packages("vctrs")
library(shiny); runApp('stat440-final-project-xinhaol2.R')
remove.packages(vctrs)
remove.packages("vctrs")
install.packages("vctrs")
install.packages("vctrs")
install.packages("vctrs")
library(shiny); runApp('stat440-final-project-xinhaol2.R')
remove.packages("cli")
install.packages("cli")
install.packages("cli")
runApp('stat440-final-project-xinhaol2.R')
install.packages("cli")
install.packages("cli")
library(shiny)
library(shinythemes)
library(plotly)
remove.packages("plotly")
library(shiny)
library(shinythemes)
library(plotly)
install.packages("plotly")
library(shiny)
library(shinythemes)
library(plotly)
remove.packages("cli")
install.packages("cli")
install.packages("cli")
library(shiny)
library(shinythemes)
library(plotly)
install.packages("cli")
install.packages("cli")
library(shiny)
library(shinythemes)
library(plotly)
library(DT)
library(httr)
library(jsonlite)
runApp('stat440-final-project-xinhaol2.R')
install.packages("googlesheets4")
# once installed
library(googlesheets4)
# running read_sheet() will ask you to authenticate with Google first
read_sheet("https://docs.google.com/spreadsheets/d/1VhLjcvaN0k9CW3E5kKTKGUKrTX3L-Eex/edit?usp=share_link&ouid=109369465217538518370&rtpof=true&sd=true")
# running read_sheet() will ask you to authenticate with Google first
read_sheet("https://docs.google.com/spreadsheets/d/1VhLjcvaN0k9CW3E5kKTKGUKrTX3L-Eex/edit?usp=share_link&ouid=109369465217538518370&rtpof=true&sd=true")
# running read_sheet() will ask you to authenticate with Google first
read_sheet("https://docs.google.com/spreadsheets/d/1VhLjcvaN0k9CW3E5kKTKGUKrTX3L-Eex/edit?usp=share_link&ouid=109369465217538518370&rtpof=true&sd=true")
install.packages("rdrop2")
library(rdrop2)
outputDir <- "responses"
tempdir()
library(readxl)
library(openxlsx)
outputDir <- "https://uofi.box.com/s/miu8jcx8jx7ejbrpbm5w9d9hxwy3luti"
loadData <- function() {
# Read all the files into a list
filesInfo <- drop_dir(outputDir)
filePaths <- filesInfo$path_display
data <- lapply(filePaths, drop_read_csv, stringsAsFactors = FALSE)
# Concatenate all data together into one data.frame
data <- do.call(rbind, data)
data
}
loadData()
outputDir <- "https://uofi.app.box.com/file/1171332072822?s=8rk1lqrkroxqhgdkyayls0sloyx2i8hk"
loadData <- function() {
# Read all the files into a list
filesInfo <- drop_dir(outputDir)
filePaths <- filesInfo$path_display
data <- lapply(filePaths, drop_read_csv, stringsAsFactors = FALSE)
# Concatenate all data together into one data.frame
data <- do.call(rbind, data)
data
}
loadData()
outputDir <- "https://uofi.box.com/s/8rk1lqrkroxqhgdkyayls0sloyx2i8hk"
loadData <- function() {
# Read all the files into a list
filesInfo <- drop_dir(outputDir)
filePaths <- filesInfo$path_display
data <- lapply(filePaths, drop_read_csv, stringsAsFactors = FALSE)
# Concatenate all data together into one data.frame
data <- do.call(rbind, data)
data
}
loadData()
outputDir <- "https://uofi.box.com/s/8rk1lqrkroxqhgdkyayls0sloyx2i8hk"
saveData <- function(data) {
data <- t(data)
# Create a unique file name
fileName <- sprintf("FRA_1996_2023.csv", as.integer(Sys.time()), digest::digest(data))
# Write the data to a temporary file locally
filePath <- file.path(tempdir(), fileName)
write.csv(data, filePath, row.names = FALSE, quote = TRUE)
# Upload the file to Dropbox
drop_upload(filePath, path = outputDir)
}
loadData <- function() {
# Read all the files into a list
filesInfo <- drop_dir(outputDir)
filePaths <- filesInfo$path_display
data <- lapply(filePaths, drop_read_csv, stringsAsFactors = FALSE)
# Concatenate all data together into one data.frame
data <- do.call(rbind, data)
data
}
saveData()
loadData()
outputDir <- "https://uofi.box.com/v/RailTEC-FRA-96-22"
data
loadData <- function() {
# Read all the files into a list
filesInfo <- drop_dir(outputDir)
filePaths <- filesInfo$path_display
data <- lapply(filePaths, drop_read_csv, stringsAsFactors = FALSE)
# Concatenate all data together into one data.frame
data <- do.call(rbind, data)
data
}
loadData()
mydata<-drop_read_csv('All_year_FRA_1996_2022_3.22.2023.csv')
f_loadData <- function(filename) {
filesInfo <- subset(drop_dir(outputDir), name=filename)
temp <- filesInfo$path_display
filePaths <- temp[which(temp==paste0("/",outputDir,"/",filename))]
data <- drop_read_csv(filePaths)
data
}
f_loadData('All_year_FRA_1996_2022_3.22.2023.csv')
library(googlesheets4)
loadData <- function() {
# Read the data
read_sheet(SHEET_ID)
}
loadData <- function() {
# Read the data
read_sheet("https://docs.google.com/spreadsheets/d/1VhLjcvaN0k9CW3E5kKTKGUKrTX3L-Eex/edit?usp=sharing&ouid=109369465217538518370&rtpof=true&sd=true")
}
loadData()
library(rdrop2)
token <- drop_auth()
# Yo, don't share your token!
saveRDS(token, "droptoken.rds")
dbfolder <- "shinyshop"
drop_create(dbfolder)
View(token)
library(rdrop2)
token <- readRDS("droptoken.rds")
# Then pass the token to each drop_ function
drop_acc(dtoken = token)
library(shiny)
library(rdrop2)
library(tidyverse)
token <- drop_auth()
#make a few excel file with iris dataset, save locally, and upload to dropbox root
iris_filenames <- paste0("iris", 1:3, ".xlsx")
walk(iris_filenames, ~write.xlsx(iris, file = .x, row.names = FALSE))
walk(iris_filenames, drop_upload)
View(token)
rlang::last_trace()
drop_auth()
drop_auth()
readxl::read_excel(localfile, ...)
library(readr)
All_year_FRA_1996_2022_3_22_2023 <- read_csv("https://raw.githubusercontent.com/Xinhao-Liu/FRA_Visualizer/main/All_year_FRA_1996_2022_3.22.2023.csv?token=GHSAT0AAAAAABX5JWXQ46JAAR4A6JBG3FCSZA5C2OQ")
View(All_year_FRA_1996_2022_3_22_2023)
runApp('FRA_Visualizer.R')
library(shiny); runApp('FRA_Visualizer.R')
install.packages("rsconnect")
rsconnect::setAccountInfo(name='railtec-safety-risk',
token='F8B510D0F3B60F9D72166A3F0FD53629',
secret='Ih1r2qhJC78HPn6Ko6Wl4Au1SQAnP2BItWRf+k/B')
library(rsconnect)
rsconnect::deployApp('https://raw.githubusercontent.com/Xinhao-Liu/FRA_Visualizer/main/FRA_Visualizer.R')
library(rsconnect)
rsconnect::deployApp('C:\Users\liuxi\Desktop\Research\2023.03.22 (FRA 2023)\Shiny plots\FRA_Visualizer\FRA_Visualizer.R')
library(rsconnect)
rsconnect::deployApp('C:/Users/liuxi/Desktop/Research/2023.03.22 (FRA 2023)/Shiny plots/FRA_Visualizer/FRA_Visualizer.R')
rsconnect::setAccountInfo(name='railtec-safety-risk', token='F8B510D0F3B60F9D72166A3F0FD53629', secret='Ih1r2qhJC78HPn6Ko6Wl4Au1SQAnP2BItWRf+k/B')
library(rsconnect)
rsconnect::deployApp('C:/Users/liuxi/Desktop/Research/2023.03.22 (FRA 2023)/Shiny plots/FRA_Visualizer/FRA_Visualizer.R')
library(rsconnect)
rsconnect::deployApp('C:/Users/liuxi/Desktop/Research/2023.03.22 (FRA 2023)/Shiny plots/FRA_Visualizer')
runApp('C:/Users/liuxi/Desktop/Research/2023.03.22 (FRA 2023)/Main APP/FRA_Visualizer.R')
runApp('C:/Users/liuxi/Desktop/Research/2023.03.22 (FRA 2023)/Main APP/FRA_Visualizer.R')
runApp('FRA_Visualizer.R')
runApp('FRA_Visualizer.R')
runApp('C:/Users/liuxi/Desktop/Research/2023.03.22 (FRA 2023)/Main APP/Main_APP_3.26.2023.R')
runApp('C:/Users/liuxi/Desktop/Research/2023.03.22 (FRA 2023)/Main APP')
runApp('FRA_Visualizer.R')
runApp('FRA_Visualizer.R')
runApp('FRA_Visualizer.R')
runApp('FRA_Visualizer.R')
runApp('FRA_Visualizer.R')
runApp('FRA_Visualizer.R')
runApp('FRA_Visualizer.R')
runApp('FRA_Visualizer.R')
runApp('FRA_Visualizer.R')
runApp('FRA_Visualizer.R')
runApp('FRA_Visualizer.R')
runApp('FRA_Visualizer.R')
runApp('FRA_Visualizer.R')
runApp('FRA_Visualizer.R')
runApp('FRA_Visualizer.R')
runApp('FRA_Visualizer.R')
runApp('FRA_Visualizer.R')
?img
runApp('FRA_Visualizer.R')
runApp('FRA_Visualizer.R')
runApp('FRA_Visualizer.R')
runApp('FRA_Visualizer.R')
runApp('FRA_Visualizer.R')
runApp('FRA_Visualizer.R')
runApp('FRA_Visualizer.R')
runApp('FRA_Visualizer.R')
runApp('FRA_Visualizer.R')
runApp('FRA_Visualizer.R')
runApp('C:/Users/liuxi/Desktop/Research/2023.03.22 (FRA 2023)/Main APP')
runApp('C:/Users/liuxi/Desktop/Research/2023.03.22 (FRA 2023)/Main APP')
library(shiny); runApp('FRA_Visualizer.R')
max(0)
max()
runApp('FRA_Visualizer.R')
parse_number("13.0%")
runApp('FRA_Visualizer.R')
raw = read_csv("https://raw.githubusercontent.com/Xinhao-Liu/FRA_Visualizer/main/All_year_FRA_1996_2022_3.22.2023.csv")
runApp('FRA_Visualizer.R')
raw %>%
filter(!is.na(TYPE_clean), !is.na(TotalDerail), TotalDerail >= 0) %>%
mutate(Accident_type = ifelse(TYPE_clean == "01", "Derailments",
ifelse(TYPE_clean %in% c("02","03","04","05","06","08"), "Collisions",
ifelse(TYPE_clean == "07", "Grade Crossing", "Other")))) %>%
mutate(Date = as.Date(as.character(Date),format = "%Y%m%d")) %>%
filter(`class 1` %in% c("non-1"),
TrainType %in% c("O"),
Accident_type %in% c("Other"),
ACCTRK %in% c(1),
Category %in% c(H),
Date <= "2020-01-01",
Date >= "2010-01-01") %>%
filter(!is.na(Group)) %>%
group_by(Group) %>%
mutate(Frequency = n(), total_derail = sum(TotalDerail)) %>%
ungroup() %>%
mutate(frequency_ratio = Frequency/length(SUMS), severity_ratio = total_derail/sum(TotalDerail)) %>%
group_by(Group) %>%
mutate(`Average Number of Cars Derailed` = round(total_derail/Frequency,1)) %>%
select(`Group Name`,Group, `Average Number of Cars Derailed`, Frequency, total_derail, severity_ratio) %>%
unique() %>%
arrange(desc(total_derail)) %>%
ungroup() %>%
mutate(`Cumulative Percentage` = paste0(round(cumsum(severity_ratio),3)*100,"%"),`Total Number of Cars` = total_derail) %>%
select(`Group Name`,Group, Frequency, `Total Number of Cars`, `Cumulative Percentage`)
raw %>%
filter(!is.na(TYPE_clean), !is.na(TotalDerail), TotalDerail >= 0) %>%
mutate(Accident_type = ifelse(TYPE_clean == "01", "Derailments",
ifelse(TYPE_clean %in% c("02","03","04","05","06","08"), "Collisions",
ifelse(TYPE_clean == "07", "Grade Crossing", "Other")))) %>%
mutate(Date = as.Date(as.character(Date),format = "%Y%m%d")) %>%
filter(`class 1` %in% c("non-1"),
TrainType %in% c("O"),
Accident_type %in% c("Other"),
ACCTRK %in% c(1),
Category %in% c("H"),
Date <= "2020-01-01",
Date >= "2010-01-01") %>%
filter(!is.na(Group)) %>%
group_by(Group) %>%
mutate(Frequency = n(), total_derail = sum(TotalDerail)) %>%
ungroup() %>%
mutate(frequency_ratio = Frequency/length(SUMS), severity_ratio = total_derail/sum(TotalDerail)) %>%
group_by(Group) %>%
mutate(`Average Number of Cars Derailed` = round(total_derail/Frequency,1)) %>%
select(`Group Name`,Group, `Average Number of Cars Derailed`, Frequency, total_derail, severity_ratio) %>%
unique() %>%
arrange(desc(total_derail)) %>%
ungroup() %>%
mutate(`Cumulative Percentage` = paste0(round(cumsum(severity_ratio),3)*100,"%"),`Total Number of Cars` = total_derail) %>%
select(`Group Name`,Group, Frequency, `Total Number of Cars`, `Cumulative Percentage`)
runApp('FRA_Visualizer.R')
runApp('FRA_Visualizer.R')
runApp('C:/Users/liuxi/Desktop/Research/2023.03.22 (FRA 2023)/Main APP')
